<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="StandardCheckBox"
           TargetType="{x:Type CheckBox}">
        <Setter Property='FocusVisualStyle'
                Value='{x:Null}' />
        <Setter Property="Control.Background"
                Value="{DynamicResource Background}" />
        <Setter Property="Control.Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Control.Padding"
                Value="4,1,0,0" />
        <Setter Property="Control.BorderThickness"
                Value="1" />
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource BorderBrushNormal}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckIcon">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="IndeterminateIcon">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <b:Boolean>True</b:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Top">
                            <Grid Name="grid"
                                  Height="14"
                                  Width="14"
                                  Opacity="0.7"
                                  Margin='1,1,-1,-1'>
                                <Rectangle Name="Background"
                                           Fill="{TemplateBinding Control.Background}"
                                           Stroke="{TemplateBinding Control.BorderBrush}"
                                           StrokeThickness="{TemplateBinding Control.BorderThickness}" />
                                <Rectangle Name="MouseOverRectangle"
                                           Stroke="{DynamicResource LinkbuttonForegroundHighlighted}"
                                           Opacity="0" />
                                <Rectangle Name="PressedRectangle"
                                           Stroke="{DynamicResource BackgroundSelected}"
                                           Opacity="0" />
                                <Path Name="CheckIcon"
                                      Opacity="0"
                                      Data="M49.4375,110.4375L51.4995,112.812 56.3745,107.24883"
                                      HorizontalAlignment="Center"
                                      Height="7.6"
                                      Stretch="Fill"
                                      Stroke="{DynamicResource BorderBrushSelected}"
                                      UseLayoutRounding="False"
                                      VerticalAlignment="Center"
                                      Width="8.9"
                                      StrokeStartLineCap="Triangle"
                                      StrokeEndLineCap="Triangle"
                                      StrokeThickness="2" />
                                <Rectangle Name="IndeterminateIcon"
                                           Height="8"
                                           Width="8"
                                           Opacity="0"
                                           Fill="{DynamicResource BackgroundSelected}" />
                                <Rectangle Name="DisabledVisualElement"
                                           Fill="{DynamicResource BorderBrushHighlighted}"
                                           Opacity="0"
                                           RadiusY="1"
                                           RadiusX="1" />
                            </Grid>
                        </Grid>
                        <ContentControl Grid.Column="1" Foreground="{DynamicResource Foreground}">
                            <ContentPresenter Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              Content="{TemplateBinding ContentControl.Content}"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              Margin="4,0,0,0"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                             />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardRadioButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Background"
                Value="{DynamicResource Background}" />
        <Setter Property="Control.Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Control.Padding"
                Value="4,1,0,0" />
        <Setter Property="Control.BorderThickness"
                Value="1" />
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource BorderBrushNormal}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                            <Grid Name="grid"
                                  Height="15"
                                  Width="15"
                                  Opacity="0.7">
                                <Ellipse Name="Background"
                                         Fill="{TemplateBinding Control.Background}"
                                         Stroke="{TemplateBinding Control.BorderBrush}"
                                         Margin="1"
                                         StrokeThickness="{TemplateBinding Control.BorderThickness}" />
                                <Ellipse Name="MouseOverEllipse"
                                         Stroke="{DynamicResource BorderBrushHighlighted}"
                                         Margin="1"
                                         Opacity="0" />
                                <Ellipse Name="PressedEllipse"
                                         Stroke="{DynamicResource BorderBrushHighlighted}"
                                         Margin="1"
                                         Opacity="0"
                                         Fill="{DynamicResource BackgroundHighlighted}" />
                                <Ellipse Name="CheckIcon"
                                         Fill="{DynamicResource Foreground}"
                                         Height="7"
                                         Opacity="0"
                                         Width="7" />
                                <Ellipse Name="DisabledVisualElement"
                                         Fill="{DynamicResource BackgroundHighlighted}"
                                         Opacity="0" />
                                <Grid Name="ValidationErrorElement"
                                      Visibility="Collapsed"
                                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Name="validationTooltip"
                                                 Placement="Right"
                                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="Canvas.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                                           Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <b:Boolean>true</b:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                    <Ellipse Height="14"
                                             Stroke="{DynamicResource Background}"
                                             StrokeThickness="1"
                                             Width="14" />
                                    <Ellipse Fill="{DynamicResource Background}"
                                             HorizontalAlignment="Right"
                                             Height="4"
                                             Margin="0,-2,-1,0"
                                             VerticalAlignment="Top"
                                             Width="4" />
                                    <Ellipse Fill="#00FFFFFF"
                                             HorizontalAlignment="Right"
                                             Height="10"
                                             Margin="0,-5,-4,0"
                                             VerticalAlignment="Top"
                                             Width="10" />
                                </Grid>
                            </Grid>
                        </Grid>
                        <ContentControl Grid.Column="1" Foreground = "{DynamicResource Foreground}">
                            <ContentPresenter Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                              Content="{TemplateBinding ContentControl.Content}"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Control.Padding}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                            <Setter TargetName="CheckIcon"
                                    Property="UIElement.Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed"
                                 Value="True">
                            <Setter TargetName="PressedEllipse"
                                    Property="UIElement.Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver"
                                 Value="True">
                            <Setter TargetName="MouseOverEllipse"
                                    Property="UIElement.Opacity"
                                    Value="1" />
                            <Setter TargetName="grid"
                                    Property="UIElement.Opacity"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked"
                                           Value="true" />
                                <Condition Property="ButtonBase.IsPressed"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckIcon"
                                    Value="{DynamicResource Background}"
                                    Property="Shape.Fill" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter TargetName="contentPresenter"
                                    Property="UIElement.Opacity"
                                    Value="0.55" />
                            <Setter TargetName="grid"
                                    Property="UIElement.Opacity"
                                    Value="0.55" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>