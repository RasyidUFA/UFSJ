<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Core/Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="StandardGroupBox"
           TargetType="GroupBox">
        <Setter Property="Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BackgroundNormal}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentSource="Header"
                                          Margin="2" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          Grid.Row="1" />
                        <Border SnapsToDevicePixels="True"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StandardProgressBar"
           TargetType="ProgressBar">
        <Setter Property="Foreground"
                Value="{DynamicResource Foreground}" />
        <Setter Property="Background"
                Value="{DynamicResource Background}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderBrushSelected}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType='{x:Type ProgressBar}'>
                    <Grid x:Name='TemplateRoot'>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name='CommonStates'>
                                <VisualState x:Name='Determinate' />
                                <VisualState x:Name='Indeterminate'>
                                    <Storyboard RepeatBehavior='Forever'>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty='(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)'
                                                                       Storyboard.TargetName='Animation'>
                                            <EasingDoubleKeyFrame KeyTime='0'
                                                                  Value='0.25' />
                                            <EasingDoubleKeyFrame KeyTime='0:0:1'
                                                                  Value='0.25' />
                                            <EasingDoubleKeyFrame KeyTime='0:0:2'
                                                                  Value='0.25' />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty='(UIElement.RenderTransformOrigin)'
                                                                      Storyboard.TargetName='Animation'>
                                            <EasingPointKeyFrame KeyTime='0'
                                                                 Value='-0.5,0.5' />
                                            <EasingPointKeyFrame KeyTime='0:0:1'
                                                                 Value='0.5,0.5' />
                                            <EasingPointKeyFrame KeyTime='0:0:2'
                                                                 Value='1.5,0.5' />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush='{TemplateBinding BorderBrush}'
                                BorderThickness='{TemplateBinding BorderThickness}'
                                Background='{TemplateBinding Background}' />
                        <Rectangle x:Name='PART_Track' />
                        <Grid x:Name='PART_Indicator'
                              ClipToBounds='True'
                              HorizontalAlignment='Left'>
                            <Rectangle x:Name='Indicator'
                                       Fill='{DynamicResource BackgroundSelected}' />
                            <Rectangle x:Name='Animation'
                                       Fill='{DynamicResource BackgroundSelected}'
                                       RenderTransformOrigin='0.5,0.5'>
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property='Orientation'
                                 Value='Vertical'>
                            <Setter Property='LayoutTransform'
                                    TargetName='TemplateRoot'>
                                <Setter.Value>
                                    <RotateTransform Angle='-90' />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property='IsIndeterminate'
                                 Value='True'>
                            <Setter Property='Visibility'
                                    TargetName='Indicator'
                                    Value='Collapsed' />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>